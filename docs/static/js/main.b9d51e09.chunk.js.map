{"version":3,"sources":["Components/AddCategory.js","helpers/getGift.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExperApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","catg","type","value","onChange","target","getGifs","Category","a","url","encodeURI","fetch","resp","json","data","console","log","gift","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","setTimeout","useFetchGifs","GifExperApp","Categories","c","ReactDOM","render","document","getElementById"],"mappings":"6KAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACE,uBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAKhB,UACE,6BAAKD,IACL,uBAAOQ,KAAK,OAAOC,MAAOT,EAAYU,SAhBhB,SAACP,GAEzBF,EAAcE,EAAEQ,OAAOF,c,+BCTdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,0FAC0EC,UAC7FH,GAFmB,sBAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KACRC,QAAQC,IAAIF,EAAM,OACZG,EAAOH,EAAKI,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXZ,IAAG,UAAEU,EAAIG,cAAN,aAAE,EAAYC,iBAAiBd,QAXjB,kBAcdQ,GAdc,4CAAH,sDCEPO,EAAc,SAAC,GAAwB,IAAtBH,EAAqB,EAArBA,MAAOZ,EAAc,EAAdA,IAAKW,EAAS,EAATA,GAExC,OADAL,QAAQC,IAAI,CAAEK,QAAOZ,MAAKW,OAExB,sBAAKK,UAAU,8DAAf,UACE,4BAAIJ,IACJ,qBAAKK,IAAKjB,EAAKkB,IAAKN,QCFbO,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAExB,ECL0B,SAACA,GAC3B,MAA0Bd,mBAAS,CACjCqB,KAAM,GACNe,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAjBAC,qBAAU,WACR1B,EAAQC,GAAU0B,MAAK,SAACd,GACtBe,YAAW,WACTH,EAAS,CACPjB,KAAMK,EACNU,SAAS,MAEV,UAEJ,CAACtB,IAQGuB,EDlB2BK,CAAa5B,GAAjCe,EAAd,EAAQR,KAAce,EAAtB,EAAsBA,QAatB,OACE,qCACE,6BAAKtB,IAEJsB,GAAW,4CACZ,qBAAKJ,UAAU,YAAf,SACGH,EAAOJ,KAAI,SAACC,GAAD,OAEV,aADA,CACC,EAAD,eAA8BA,GAAZA,EAAIC,aExBnBgB,EAAc,WAEzB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAKA,OACE,qCACE,6CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACG6C,EAAWnB,KAAI,SAACoB,GAAD,OACd,cAAC,EAAD,CAAiB/B,SAAU+B,GAAbA,Y,MCZxBC,IAASC,OACR,cAAC,EAAD,IACCC,SAASC,eAAe,W","file":"static/js/main.b9d51e09.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n//import { GifExperApp } from './GifExperApp';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setinputValue] = useState(\"\");\r\n  //Funcion del events\r\n  const handleInputChange = (e) => {\r\n    // console.log(e.target.value);\r\n    setinputValue(e.target.value);\r\n  };\r\n  //Funcion de enter\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((catg) => [inputValue, ...catg]);\r\n      setinputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>{inputValue}</h2>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async (Category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=1nCZYVR7uVqAZdgYGr0bl8Q9kFcaUTvl&q=${encodeURI(\r\n    Category\r\n  )}&limit=10`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n  console.log(data, \"Url\");\r\n  const gift = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n  return gift;\r\n  // console.log(gift, \"gift\");\r\n  // setImages(gift);\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ title, url, id }) => {\r\n  console.log({ title, url, id });\r\n  return (\r\n    <div className=\"card animate__animated animate__bounce animate__slideInDown\">\r\n      <p>{title}</p>\r\n      <img src={url} alt={title} />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n//import { getGifs } from \"../helpers/getGift\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ Category }) => {\r\n  //Para renombra cualquier elemento se utiliza : y el nombre que deseamos poner ejmplo  data: images\r\n  const { data: images, loading } = useFetchGifs(Category);\r\n\r\n  // const [images, setImages] = useState([]);\r\n  //useEfect permite Ejecuta sierto codigo de mnera condicional\r\n\r\n  // useEffect(() => {\r\n  //   getGifs(Category).then((imgs) => setImages(imgs));\r\n  // }, [Category]); //Arreglo o lista [] de dependencia esto hace que el use useEffect no se recargue\r\n\r\n  //const [Count, setCount] = useState(0);\r\n\r\n  //   getGifs();\r\n\r\n  return (\r\n    <>\r\n      <h3>{Category}</h3>\r\n      {/* {loading ? \"Cargando...\" : \"Fin de Carga\"} */}\r\n      {loading && <p>Loading....</p>}\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          // console.log(c, \"mapeo\");\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGift\";\r\nexport const useFetchGifs = (Category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(Category).then((img) => {\r\n      setTimeout(() => {\r\n        setState({\r\n          data: img,\r\n          loading: false,\r\n        });\r\n      }, 3000);\r\n    });\r\n  }, [Category]);\r\n  //   setTimeout(() => {\r\n  //     setState({\r\n  //       data: [1, 4, 3, 4, 9, 7, 0],\r\n  //       loading: false,\r\n  //     });\r\n  //   }, 3000);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./Components/AddCategory\";\r\nimport { GifGrid } from \"./Components/GifGrid\";\r\n\r\nexport const GifExperApp = () => {\r\n  // const categories = [\"One Punch\", \"samurai x\", \"Dragon Ball\"];\r\n  const [Categories, setCategories] = useState([\"One Punch\"]);\r\n  // const handleAdd = () => {\r\n  //   setCategories((c) => [...Categories, \"Naruto1\"]);\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <h1>GitExperApp</h1>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {Categories.map((c) => (\r\n          <GifGrid key={c} Category={c} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExperApp } from './GifExperApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n <GifExperApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}